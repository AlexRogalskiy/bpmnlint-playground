#!/usr/bin/env node

const execa = require('execa');

const path = require('path');

const fs = require('fs');

const rollup = require.resolve('rollup/dist/bin/rollup');

const rollupConfig = path.join(__dirname, '..', 'config', 'rollup.run-config.js');

if (!fs.existsSync('.bpmnlintrc')) {
  console.error(`
Cannot not find local .bpmnlintrc file, please create one:

  npx bpmnlint --init

Refer to https://github.com/bpmn-io/bpmnlint#configuration for details.
`);

  process.exit(1);
}

try {
  require.resolve('bpmnlint');
} catch (err) {
  console.error(`
Cannot find <bpmnlint>, please install it:

  npm install -D bpmnlint
`);

}

const argv = process.argv.slice(2);

const [ arg ] = argv;

if (arg === '--help') {
  console.log('usage: bpmnlint-playground [diagram]');

  process.exit(0);
}

if (arg) {

  if (!fs.existsSync(arg)) {
    console.error(`diagram ${arg} does not exist`);

    process.exit(1);
  }
}


try {
  execa.sync(rollup, ['-w', '-c', rollupConfig ], {
    stdout: 'inherit',
    stderr: 'inherit',
    env: {
      BPMNLINT_PLAYGROUND_OPEN_DIAGRAM: arg
    }
  });
} catch (err) {
  process.exit(err.exitCode);
}
